# Day : 2024.04.30
# Code

# Load required libraries
library(ShortRead)
library(Biostrings)
library(Rfastp)
library(edgeR)

# Set working directory
root_dir <- 'C:/R'
setwd(root_dir)

# Define paths to input FASTQ files
fastq_files <- c("C:/R/SRR17001183.fastq.gz",
                 "C:/R/SRR17001180.fastq.gz",
                 "C:/R/SRR17001176.fastq.gz",
                 "C:/R/SRR17001179.fastq.gz",
                 "C:/R/SRR17001186.fastq.gz",
                 "C:/R/SRR17001182.fastq.gz")

# Perform QC using rfastp for each FASTQ file
for (fastq_file in fastq_files) {
  # Generate output file names
  output_prefix <- sub(".fastq.gz$", "", basename(fastq_file))
  output_json <- paste0(output_prefix, "_rfastp.json")
  output_html <- paste0(output_prefix, "_rfastp.html")
  
  # Perform QC and generate JSON report
  json_report <- rfastp(read1 = fastq_file, outputFastq = output_prefix)
  
  # Generate QC summary
  qcSummary(json_report)
  
  # Generate QC plots
  curvePlot(json_report)
  curvePlot(json_report, curve = "content_curves")
}

# Prepare data for analysis
# For simplicity, assuming counts are generated from rfastp
# You may need to replace this with actual count data
counts <- read.counts.from.rfastp()  # Replace this with actual code to read counts from rfastp output

# Perform edgeR analysis
dge <- DGEList(counts)
dge <- calcNormFactors(dge)

# MDS analysis for library quality
grp.col <- rainbow(ncol(dge))
grp.cols <- grp.col[dge$samples$group]

png(file = file.path(root_dir, paste(project_name, '_mds.png', sep='')),
    width = 3*500, height = 3*500, res = 300)
plotMDS(dge, cex = 1, col = grp.cols, method = 'bcv')
dev.off()

# Problem
Need to align the fastq file to the reference genome. 


# Solution
-------------
 Make a fastq file to BAM file 
 Acquired Reference file list
 GCA_000973105.1_ASM97310v1_genomic.fna
 genomic.gff
 genomic.gtf
Prepare the code for the bam file based on the code above. 


##Use to 'STAR' or 'Bowtie2' 
